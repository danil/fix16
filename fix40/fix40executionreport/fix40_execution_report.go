// Code generated by protofix; DO NOT EDIT.
// Copyright 2021 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package fix40executionreport is a format of the FIX.4.0 ExecutionReport message.
package fix40executionreport

import (
	f0 "github.com/protofix/protofix/codecfix"
	"github.com/protofix/protofix/marshfix"
)

var (
	FIX40ExecutionReportMarshaler   = marshfix.Marshal{Tag: "FIX40", Format: FIX40ExecutionReport}
	FIX40ExecutionReportUnmarshaler = marshfix.Unmarshal{Tag: "FIX40", Format: FIX40ExecutionReport}
)

// FIX40ExecutionReport is a FIX.4.0 format of the ExecutionReport message which maps the codecs into individual fields.
var FIX40ExecutionReport = f0.Format{
	Fields: map[int]f0.Codec{
		BeginString8:        f0.Fld{Req, f0.ASCII, f0.StringDefault("FIX.4.0"), f0.Con{7}},
		MsgType35:           f0.Fld{Req, f0.ASCII, f0.String("0" /* HEARTBEAT */, "1" /* TEST_REQUEST */, "2" /* RESEND_REQUEST */, "3" /* REJECT */, "4" /* SEQUENCE_RESET */, "5" /* LOGOUT */, "6" /* INDICATION_OF_INTEREST */, "7" /* ADVERTISEMENT */, "8" /* EXECUTION_REPORT */, "9" /* ORDER_CANCEL_REJECT */, "A" /* LOGON */, "B" /* NEWS */, "C" /* EMAIL */, "D" /* ORDER_D */, "E" /* ORDER_E */, "F" /* ORDER_CANCEL_REQUEST */, "G" /* ORDER_CANCEL_REPLACE_REQUEST */, "H" /* ORDER_STATUS_REQUEST */, "J" /* ALLOCATION */, "K" /* LIST_CANCEL_REQUEST */, "L" /* LIST_EXECUTE */, "M" /* LIST_STATUS_REQUEST */, "N" /* LIST_STATUS */, "P" /* ALLOCATION_ACK */, "Q" /* DONT_KNOW_TRADE */, "R" /* QUOTE_REQUEST */, "S" /* QUOTE */), f0.Var{1, 2}},
		SenderCompID49:      f0.Fld{Req, f0.ASCII, f0.String(), f0.Con{1}},
		TargetCompID56:      f0.Fld{Req, f0.ASCII, f0.String(), f0.Con{1}},
		OnBehalfOfCompID115: f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		DeliverToCompID128:  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SecureDataLen90:     f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		SecureData91:        f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		MsgSeqNum34:         f0.Fld{Req, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		SenderSubID50:       f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		TargetSubID57:       f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		OnBehalfOfSubID116:  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		DeliverToSubID129:   f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		PossDupFlag43:       f0.Fld{Opt, f0.ASCII, f0.String("N" /* NO */, "Y" /* YES */), f0.Con{1}},
		PossResend97:        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SendingTime52:       f0.Fld{Req, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		OrigSendingTime122:  f0.Fld{Opt, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		OrderID37:           f0.Fld{Req, f0.ASCII, f0.String(), f0.Con{1}},
		ClOrdID11:           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		ClientID109:         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		ExecBroker76:        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		ListID66:            f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		ExecID17:            f0.Fld{Req, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		ExecTransType20:     f0.Fld{Req, f0.ASCII, f0.String("0" /* NEW */, "1" /* CANCEL */, "2" /* CORRECT */, "3" /* STATUS */), f0.Con{1}},
		ExecRefID19:         f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		OrdStatus39:         f0.Fld{Req, f0.ASCII, f0.String("0" /* NEW */, "1" /* PARTIALLY_FILLED */, "2" /* FILLED */, "3" /* DONE_FOR_DAY */, "4" /* CANCELED */, "5" /* REPLACED */, "6" /* PENDING_CANCEL_REPLACE */, "7" /* STOPPED */, "8" /* REJECTED */, "9" /* SUSPENDED */, "A" /* PENDING_NEW */, "B" /* CALCULATED */, "C" /* EXPIRED */), f0.Con{1}},
		OrdRejReason103:     f0.Fld{Opt, f0.ASCII, f0.IntDefault(0 /* BROKER_OPTION */, 1 /* UNKNOWN_SYMBOL */, 2 /* EXCHANGE_CLOSED */, 3 /* ORDER_EXCEEDS_LIMIT */, 4 /* TOO_LATE_TO_ENTER */), f0.Var{1, 19}},
		Account1:            f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SettlmntTyp63:       f0.Fld{Opt, f0.ASCII, f0.String("0" /* REGULAR */, "1" /* CASH */, "2" /* NEXT_DAY */, "3" /* T_PLUS_2 */, "4" /* T_PLUS_3 */, "5" /* T_PLUS_4 */, "6" /* FUTURE */, "7" /* WHEN_ISSUED */, "8" /* SELLERS_OPTION */, "9" /* T_PLUS_5 */), f0.Con{1}},
		FutSettDate64:       f0.Fld{Opt, f0.ASCII, f0.UTCDateOnlyTime(), f0.Con{8}},
		Symbol55:            f0.Fld{Req, f0.ASCII, f0.String(), f0.Con{1}},
		SymbolSfx65:         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SecurityID48:        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		IDSource22:          f0.Fld{Opt, f0.ASCII, f0.String("1" /* CUSIP */, "2" /* SEDOL */, "3" /* QUIK */, "4" /* ISIN_NUMBER */, "5" /* RIC_CODE */), f0.Con{1}},
		Issuer106:           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SecurityDesc107:     f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		Side54:              f0.Fld{Req, f0.ASCII, f0.String("1" /* BUY */, "2" /* SELL */, "3" /* BUY_MINUS */, "4" /* SELL_PLUS */, "5" /* SELL_SHORT */, "6" /* SELL_SHORT_EXEMPT */), f0.Con{1}},
		OrderQty38:          f0.Fld{Req, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		OrdType40:           f0.Fld{Opt, f0.ASCII, f0.String("1" /* MARKET */, "2" /* LIMIT */, "3" /* STOP */, "4" /* STOP_LIMIT */, "5" /* MARKET_ON_CLOSE */, "6" /* WITH_OR_WITHOUT */, "7" /* LIMIT_OR_BETTER */, "8" /* LIMIT_WITH_OR_WITHOUT */, "9" /* ON_BASIS */, "A" /* ON_CLOSE */, "B" /* LIMIT_ON_CLOSE */, "C" /* FOREX */, "D" /* PREVIOUSLY_QUOTED */, "E" /* PREVIOUSLY_INDICATED */, "P" /* PEGGED */), f0.Con{1}},
		Price44:             f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		StopPx99:            f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		Currency15:          f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		TimeInForce59:       f0.Fld{Opt, f0.ASCII, f0.String("0" /* DAY */, "1" /* GOOD_TILL_CANCEL */, "2" /* AT_THE_OPENING */, "3" /* IMMEDIATE_OR_CANCEL */, "4" /* FILL_OR_KILL */, "5" /* GOOD_TILL_CROSSING */, "6" /* GOOD_TILL_DATE */), f0.Con{1}},
		ExpireTime126:       f0.Fld{Opt, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		ExecInst18:          f0.Fld{Opt, f0.ASCII, f0.String("0" /* STAY_ON_OFFERSIDE */, "1" /* NOT_HELD */, "2" /* WORK */, "3" /* GO_ALONG */, "4" /* OVER_THE_DAY */, "5" /* HELD */, "6" /* PARTICIPATE_DONT_INITIATE */, "7" /* STRICT_SCALE */, "8" /* TRY_TO_SCALE */, "9" /* STAY_ON_BIDSIDE */, "A" /* NO_CROSS */, "B" /* OK_TO_CROSS */, "C" /* CALL_FIRST */, "D" /* PERCENT_OF_VOLUME */, "E" /* DO_NOT_INCREASE */, "F" /* DO_NOT_REDUCE */, "G" /* ALL_OR_NONE */, "I" /* INSTITUTIONS_ONLY */, "L" /* LAST_PEG */, "M" /* MID_PRICE_PEG */, "N" /* NON_NEGOTIABLE */, "O" /* OPENING_PEG */, "P" /* MARKET_PEG */, "R" /* PRIMARY_PEG */, "S" /* SUSPEND */), f0.Con{1}},
		Rule80A47:           f0.Fld{Opt, f0.ASCII, f0.String("A" /* AGENCY_SINGLE_ORDER */, "C" /* PROGRAM_ORDER_NON_INDEX_ARB_FOR_MEMBER_FIRM_ORG */, "D" /* PROGRAM_ORDER_INDEX_ARB_FOR_MEMBER_FIRM_ORG */, "I" /* INDIVIDUAL_INVESTOR_SINGLE_ORDER */, "J" /* PROGRAM_ORDER_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER */, "K" /* PROGRAM_ORDER_NON_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER */, "M" /* PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_MEMBER */, "N" /* PROGRAM_ORDER_NON_INDEX_ARB_FOR_OTHER_MEMBER */, "U" /* PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_AGENCY */, "W" /* ALL_OTHER_ORDERS_AS_AGENT_FOR_OTHER_MEMBER */, "Y" /* PROGRAM_ORDER_NON_INDEX_ARB_FOR_OTHER_AGENCY */), f0.Con{1}},
		LastShares32:        f0.Fld{Req, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		LastPx31:            f0.Fld{Req, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		LastMkt30:           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		LastCapacity29:      f0.Fld{Opt, f0.ASCII, f0.String("1" /* AGENT */, "2" /* CROSS_AS_AGENT */, "3" /* CROSS_AS_PRINCIPAL */, "4" /* PRINCIPAL */), f0.Con{1}},
		CumQty14:            f0.Fld{Req, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		AvgPx6:              f0.Fld{Req, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		TradeDate75:         f0.Fld{Opt, f0.ASCII, f0.UTCDateOnlyTime(), f0.Con{8}},
		TransactTime60:      f0.Fld{Opt, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		ReportToExch113:     f0.Fld{Opt, f0.ASCII, f0.String("N" /* NO */, "Y" /* YES */), f0.Con{1}},
		Commission12:        f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		CommType13:          f0.Fld{Opt, f0.ASCII, f0.String("1" /* PER_SHARE */, "2" /* PERCENTAGE */, "3" /* ABSOLUTE */), f0.Con{1}},
		NetMoney118:         f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		SettlCurrAmt119:     f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		SettlCurrency120:    f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		Text58:              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SignatureLength93:   f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		Signature89:         f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
	},
	BodyLength9: f0.BodyLengthFld{f0.ASCII, f0.BodyLength(), f0.Var{1, 18}},
	CheckSum10:  f0.CheckSumFld{f0.ASCII, f0.CheckSum(), f0.Con{3}},
	Unknown0:    f0.UnknownFld{f0.ASCII, f0.Unknown(), f0.Var{1, 65536}},
	Sort: []int{
		BeginString8,        // CHAR
		BodyLength9,         // INT
		MsgType35,           // CHAR
		SenderCompID49,      // CHAR
		TargetCompID56,      // CHAR
		OnBehalfOfCompID115, // CHAR
		DeliverToCompID128,  // CHAR
		SecureDataLen90,     // LENGTH
		SecureData91,        // DATA
		MsgSeqNum34,         // INT
		SenderSubID50,       // CHAR
		TargetSubID57,       // CHAR
		OnBehalfOfSubID116,  // CHAR
		DeliverToSubID129,   // CHAR
		PossDupFlag43,       // CHAR
		PossResend97,        // CHAR
		SendingTime52,       // TIME
		OrigSendingTime122,  // TIME
		OrderID37,           // CHAR
		ClOrdID11,           // CHAR
		ClientID109,         // CHAR
		ExecBroker76,        // CHAR
		ListID66,            // CHAR
		ExecID17,            // INT
		ExecTransType20,     // CHAR
		ExecRefID19,         // INT
		OrdStatus39,         // CHAR
		OrdRejReason103,     // INT
		Account1,            // CHAR
		SettlmntTyp63,       // CHAR
		FutSettDate64,       // DATE
		Symbol55,            // CHAR
		SymbolSfx65,         // CHAR
		SecurityID48,        // CHAR
		IDSource22,          // CHAR
		Issuer106,           // CHAR
		SecurityDesc107,     // CHAR
		Side54,              // CHAR
		OrderQty38,          // INT
		OrdType40,           // CHAR
		Price44,             // FLOAT
		StopPx99,            // FLOAT
		Currency15,          // CHAR
		TimeInForce59,       // CHAR
		ExpireTime126,       // TIME
		ExecInst18,          // CHAR
		Rule80A47,           // CHAR
		LastShares32,        // INT
		LastPx31,            // FLOAT
		LastMkt30,           // CHAR
		LastCapacity29,      // CHAR
		CumQty14,            // INT
		AvgPx6,              // FLOAT
		TradeDate75,         // DATE
		TransactTime60,      // TIME
		ReportToExch113,     // CHAR
		Commission12,        // FLOAT
		CommType13,          // CHAR
		NetMoney118,         // FLOAT
		SettlCurrAmt119,     // FLOAT
		SettlCurrency120,    // CHAR
		Text58,              // CHAR
		SignatureLength93,   // LENGTH
		Signature89,         // DATA
		CheckSum10,          // CHAR
	},
}

const Req, Opt = true, false

const (
	BeginString8        = 8   // CHAR
	BodyLength9         = 9   // INT
	MsgType35           = 35  // CHAR
	SenderCompID49      = 49  // CHAR
	TargetCompID56      = 56  // CHAR
	OnBehalfOfCompID115 = 115 // CHAR
	DeliverToCompID128  = 128 // CHAR
	SecureDataLen90     = 90  // LENGTH
	SecureData91        = 91  // DATA
	MsgSeqNum34         = 34  // INT
	SenderSubID50       = 50  // CHAR
	TargetSubID57       = 57  // CHAR
	OnBehalfOfSubID116  = 116 // CHAR
	DeliverToSubID129   = 129 // CHAR
	PossDupFlag43       = 43  // CHAR
	PossResend97        = 97  // CHAR
	SendingTime52       = 52  // TIME
	OrigSendingTime122  = 122 // TIME
	OrderID37           = 37  // CHAR
	ClOrdID11           = 11  // CHAR
	ClientID109         = 109 // CHAR
	ExecBroker76        = 76  // CHAR
	ListID66            = 66  // CHAR
	ExecID17            = 17  // INT
	ExecTransType20     = 20  // CHAR
	ExecRefID19         = 19  // INT
	OrdStatus39         = 39  // CHAR
	OrdRejReason103     = 103 // INT
	Account1            = 1   // CHAR
	SettlmntTyp63       = 63  // CHAR
	FutSettDate64       = 64  // DATE
	Symbol55            = 55  // CHAR
	SymbolSfx65         = 65  // CHAR
	SecurityID48        = 48  // CHAR
	IDSource22          = 22  // CHAR
	Issuer106           = 106 // CHAR
	SecurityDesc107     = 107 // CHAR
	Side54              = 54  // CHAR
	OrderQty38          = 38  // INT
	OrdType40           = 40  // CHAR
	Price44             = 44  // FLOAT
	StopPx99            = 99  // FLOAT
	Currency15          = 15  // CHAR
	TimeInForce59       = 59  // CHAR
	ExpireTime126       = 126 // TIME
	ExecInst18          = 18  // CHAR
	Rule80A47           = 47  // CHAR
	LastShares32        = 32  // INT
	LastPx31            = 31  // FLOAT
	LastMkt30           = 30  // CHAR
	LastCapacity29      = 29  // CHAR
	CumQty14            = 14  // INT
	AvgPx6              = 6   // FLOAT
	TradeDate75         = 75  // DATE
	TransactTime60      = 60  // TIME
	ReportToExch113     = 113 // CHAR
	Commission12        = 12  // FLOAT
	CommType13          = 13  // CHAR
	NetMoney118         = 118 // FLOAT
	SettlCurrAmt119     = 119 // FLOAT
	SettlCurrency120    = 120 // CHAR
	Text58              = 58  // CHAR
	SignatureLength93   = 93  // LENGTH
	Signature89         = 89  // DATA
	CheckSum10          = 10  // CHAR
)
