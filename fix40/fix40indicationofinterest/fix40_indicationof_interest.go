// Code generated by protofix; DO NOT EDIT.
// Copyright 2021 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package fix40indicationofinterest is a format of the FIX.4.0 IndicationofInterest message.
package fix40indicationofinterest

import (
	f0 "github.com/protofix/protofix/codecfix"
	"github.com/protofix/protofix/marshfix"
)

var (
	FIX40IndicationofInterestMarshaler   = marshfix.Marshal{Tag: "FIX40", Format: FIX40IndicationofInterest}
	FIX40IndicationofInterestUnmarshaler = marshfix.Unmarshal{Tag: "FIX40", Format: FIX40IndicationofInterest}
)

// FIX40IndicationofInterest is a FIX.4.0 format of the IndicationofInterest message which maps the codecs into individual fields.
var FIX40IndicationofInterest = f0.Format{
	Fields: map[int]f0.Codec{
		BeginString8:        f0.Fld{Req, f0.ASCII, f0.StringDefault("FIX.4.0"), f0.Con{7}},
		MsgType35:           f0.Fld{Req, f0.ASCII, f0.String("0" /* HEARTBEAT */, "1" /* TEST_REQUEST */, "2" /* RESEND_REQUEST */, "3" /* REJECT */, "4" /* SEQUENCE_RESET */, "5" /* LOGOUT */, "6" /* INDICATION_OF_INTEREST */, "7" /* ADVERTISEMENT */, "8" /* EXECUTION_REPORT */, "9" /* ORDER_CANCEL_REJECT */, "A" /* LOGON */, "B" /* NEWS */, "C" /* EMAIL */, "D" /* ORDER_D */, "E" /* ORDER_E */, "F" /* ORDER_CANCEL_REQUEST */, "G" /* ORDER_CANCEL_REPLACE_REQUEST */, "H" /* ORDER_STATUS_REQUEST */, "J" /* ALLOCATION */, "K" /* LIST_CANCEL_REQUEST */, "L" /* LIST_EXECUTE */, "M" /* LIST_STATUS_REQUEST */, "N" /* LIST_STATUS */, "P" /* ALLOCATION_ACK */, "Q" /* DONT_KNOW_TRADE */, "R" /* QUOTE_REQUEST */, "S" /* QUOTE */), f0.Var{1, 2}},
		SenderCompID49:      f0.Fld{Req, f0.ASCII, f0.String(), f0.Con{1}},
		TargetCompID56:      f0.Fld{Req, f0.ASCII, f0.String(), f0.Con{1}},
		OnBehalfOfCompID115: f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		DeliverToCompID128:  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SecureDataLen90:     f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		SecureData91:        f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		MsgSeqNum34:         f0.Fld{Req, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		SenderSubID50:       f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		TargetSubID57:       f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		OnBehalfOfSubID116:  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		DeliverToSubID129:   f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		PossDupFlag43:       f0.Fld{Opt, f0.ASCII, f0.String("N" /* NO */, "Y" /* YES */), f0.Con{1}},
		PossResend97:        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SendingTime52:       f0.Fld{Req, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		OrigSendingTime122:  f0.Fld{Opt, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		IOIid23:             f0.Fld{Req, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		IOITransType28:      f0.Fld{Req, f0.ASCII, f0.String("C" /* CANCEL */, "N" /* NEW */, "R" /* REPLACE */), f0.Con{1}},
		IOIRefID26:          f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		Symbol55:            f0.Fld{Req, f0.ASCII, f0.String(), f0.Con{1}},
		SymbolSfx65:         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SecurityID48:        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		IDSource22:          f0.Fld{Opt, f0.ASCII, f0.String("1" /* CUSIP */, "2" /* SEDOL */, "3" /* QUIK */, "4" /* ISIN_NUMBER */, "5" /* RIC_CODE */), f0.Con{1}},
		Issuer106:           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SecurityDesc107:     f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		Side54:              f0.Fld{Req, f0.ASCII, f0.String("1" /* BUY */, "2" /* SELL */, "3" /* BUY_MINUS */, "4" /* SELL_PLUS */, "5" /* SELL_SHORT */, "6" /* SELL_SHORT_EXEMPT */), f0.Con{1}},
		IOIShares27:         f0.Fld{Req, f0.ASCII, f0.String("L" /* LARGE */, "M" /* MEDIUM */, "S" /* SMALL */), f0.Con{1}},
		Price44:             f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		Currency15:          f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		ValidUntilTime62:    f0.Fld{Opt, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		IOIQltyInd25:        f0.Fld{Opt, f0.ASCII, f0.String("H" /* HIGH */, "L" /* LOW */, "M" /* MEDIUM */), f0.Con{1}},
		IOIOthSvc24:         f0.Fld{Opt, f0.ASCII, f0.String("A" /* AUTEX */, "B" /* BRIDGE */), f0.Con{1}},
		IOINaturalFlag130:   f0.Fld{Opt, f0.ASCII, f0.String("N" /* NO */, "Y" /* YES */), f0.Con{1}},
		IOIQualifier104:     f0.Fld{Opt, f0.ASCII, f0.String("A" /* ALL_OR_NONE */, "C" /* AT_THE_CLOSE */, "I" /* IN_TOUCH_WITH */, "L" /* LIMIT */, "M" /* MORE_BEHIND */, "O" /* AT_THE_OPEN */, "P" /* TAKING_A_POSITION */, "Q" /* CURRENT_QUOTE */, "S" /* PORTFOLIO_SHOW_N */, "T" /* THROUGH_THE_DAY */, "V" /* VERSUS */, "W" /* INDICATION */, "X" /* CROSSING_OPPORTUNITY */), f0.Con{1}},
		Text58:              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		SignatureLength93:   f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		Signature89:         f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
	},
	BodyLength9: f0.BodyLengthFld{f0.ASCII, f0.BodyLength(), f0.Var{1, 18}},
	CheckSum10:  f0.CheckSumFld{f0.ASCII, f0.CheckSum(), f0.Con{3}},
	Unknown0:    f0.UnknownFld{f0.ASCII, f0.Unknown(), f0.Var{1, 65536}},
	Sort: []int{
		BeginString8,        // CHAR
		BodyLength9,         // INT
		MsgType35,           // CHAR
		SenderCompID49,      // CHAR
		TargetCompID56,      // CHAR
		OnBehalfOfCompID115, // CHAR
		DeliverToCompID128,  // CHAR
		SecureDataLen90,     // LENGTH
		SecureData91,        // DATA
		MsgSeqNum34,         // INT
		SenderSubID50,       // CHAR
		TargetSubID57,       // CHAR
		OnBehalfOfSubID116,  // CHAR
		DeliverToSubID129,   // CHAR
		PossDupFlag43,       // CHAR
		PossResend97,        // CHAR
		SendingTime52,       // TIME
		OrigSendingTime122,  // TIME
		IOIid23,             // INT
		IOITransType28,      // CHAR
		IOIRefID26,          // INT
		Symbol55,            // CHAR
		SymbolSfx65,         // CHAR
		SecurityID48,        // CHAR
		IDSource22,          // CHAR
		Issuer106,           // CHAR
		SecurityDesc107,     // CHAR
		Side54,              // CHAR
		IOIShares27,         // CHAR
		Price44,             // FLOAT
		Currency15,          // CHAR
		ValidUntilTime62,    // TIME
		IOIQltyInd25,        // CHAR
		IOIOthSvc24,         // CHAR
		IOINaturalFlag130,   // CHAR
		IOIQualifier104,     // CHAR
		Text58,              // CHAR
		SignatureLength93,   // LENGTH
		Signature89,         // DATA
		CheckSum10,          // CHAR
	},
}

const Req, Opt = true, false

const (
	BeginString8        = 8   // CHAR
	BodyLength9         = 9   // INT
	MsgType35           = 35  // CHAR
	SenderCompID49      = 49  // CHAR
	TargetCompID56      = 56  // CHAR
	OnBehalfOfCompID115 = 115 // CHAR
	DeliverToCompID128  = 128 // CHAR
	SecureDataLen90     = 90  // LENGTH
	SecureData91        = 91  // DATA
	MsgSeqNum34         = 34  // INT
	SenderSubID50       = 50  // CHAR
	TargetSubID57       = 57  // CHAR
	OnBehalfOfSubID116  = 116 // CHAR
	DeliverToSubID129   = 129 // CHAR
	PossDupFlag43       = 43  // CHAR
	PossResend97        = 97  // CHAR
	SendingTime52       = 52  // TIME
	OrigSendingTime122  = 122 // TIME
	IOIid23             = 23  // INT
	IOITransType28      = 28  // CHAR
	IOIRefID26          = 26  // INT
	Symbol55            = 55  // CHAR
	SymbolSfx65         = 65  // CHAR
	SecurityID48        = 48  // CHAR
	IDSource22          = 22  // CHAR
	Issuer106           = 106 // CHAR
	SecurityDesc107     = 107 // CHAR
	Side54              = 54  // CHAR
	IOIShares27         = 27  // CHAR
	Price44             = 44  // FLOAT
	Currency15          = 15  // CHAR
	ValidUntilTime62    = 62  // TIME
	IOIQltyInd25        = 25  // CHAR
	IOIOthSvc24         = 24  // CHAR
	IOINaturalFlag130   = 130 // CHAR
	IOIQualifier104     = 104 // CHAR
	Text58              = 58  // CHAR
	SignatureLength93   = 93  // LENGTH
	Signature89         = 89  // DATA
	CheckSum10          = 10  // CHAR
)
