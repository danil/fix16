// Code generated by protofix; DO NOT EDIT.
// Copyright 2021 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package fix50tradingsessionstatus is a format of the FIX.5.0 TradingSessionStatus message.
package fix50tradingsessionstatus

import (
	f0 "github.com/protofix/protofix/codecfix"
	"github.com/protofix/protofix/marshfix"
)

var (
	FIX50TradingSessionStatusMarshaler   = marshfix.Marshal{Tag: "FIX50", Format: FIX50TradingSessionStatus}
	FIX50TradingSessionStatusUnmarshaler = marshfix.Unmarshal{Tag: "FIX50", Format: FIX50TradingSessionStatus}
)

// FIX50TradingSessionStatus is a FIX.5.0 format of the TradingSessionStatus message which maps the codecs into individual fields.
var FIX50TradingSessionStatus = f0.Format{
	Fields: map[int]f0.Codec{
		TradSesReqID335:               f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		TradingSessionID336:           f0.Fld{Req, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		TradingSessionSubID625:        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		TradSesMethod338:              f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* ELECTRONIC */, 2 /* OPEN_OUTCRY */, 3 /* TWO_PARTY */), f0.Var{1, 19}},
		TradSesMode339:                f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* TESTING */, 2 /* SIMULATED */, 3 /* PRODUCTION */), f0.Var{1, 19}},
		UnsolicitedIndicator325:       f0.Fld{Opt, f0.ASCII, f0.BoolDefault(false /* NO */, true /* YES */), f0.Con{1}},
		TradSesStatus340:              f0.Fld{Req, f0.ASCII, f0.IntDefault(0 /* UNKNOWN */, 1 /* HALTED */, 2 /* OPEN */, 3 /* CLOSED */, 4 /* PRE_OPEN */, 5 /* PRE_CLOSE */, 6 /* REQUEST_REJECTED */), f0.Var{1, 19}},
		TradSesStatusRejReason567:     f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* UNKNOWN_OR_INVALID_TRADINGSESSIONID */, 99 /* OTHER */), f0.Var{1, 19}},
		TradSesStartTime341:           f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TradSesOpenTime342:            f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TradSesPreCloseTime343:        f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TradSesCloseTime344:           f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TradSesEndTime345:             f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TotalVolumeTraded387:          f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		Text58:                        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EncodedTextLen354:             f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		EncodedText355:                f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		Symbol55:                      f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		SymbolSfx65:                   f0.Fld{Opt, f0.ASCII, f0.String("CD" /* EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE */, "WI" /* WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN */), f0.Var{1, 65536}},
		SecurityID48:                  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		SecurityIDSource22:            f0.Fld{Opt, f0.ASCII, f0.String("1" /* CUSIP */, "2" /* SEDOL */, "3" /* QUIK */, "4" /* ISIN_NUMBER */, "5" /* RIC_CODE */, "6" /* ISO_CURRENCY_CODE */, "7" /* ISO_COUNTRY_CODE */, "8" /* EXCHANGE_SYMBOL */, "9" /* CONSOLIDATED_TAPE_ASSOCIATION */, "A" /* BLOOMBERG_SYMBOL */, "B" /* WERTPAPIER */, "C" /* DUTCH */, "D" /* VALOREN */, "E" /* SICOVAM */, "F" /* BELGIAN */, "G" /* COMMON */, "H" /* CLEARING_HOUSE */, "I" /* ISDA_FPML_PRODUCT_SPECIFICATION */, "J" /* OPTION_PRICE_REPORTING_AUTHORITY */, "L" /* LETTER_OF_CREDIT */, "K" /* ISDA_FPML_PRODUCT_URL */), f0.Var{1, 65536}},
		Product460:                    f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* AGENCY */, 10 /* MORTGAGE */, 11 /* MUNICIPAL */, 12 /* OTHER */, 13 /* FINANCING */, 2 /* COMMODITY */, 3 /* CORPORATE */, 4 /* CURRENCY */, 5 /* EQUITY */, 6 /* GOVERNMENT */, 7 /* INDEX */, 8 /* LOAN */, 9 /* MONEYMARKET */), f0.Var{1, 19}},
		CFICode461:                    f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		SecurityType167:               f0.Fld{Opt, f0.ASCII, f0.String("ABS" /* ASSET_BACKED_SECURITIES */, "AMENDED" /* AMENDED_RESTATED */, "AN" /* OTHER_ANTICIPATION_NOTES */, "BA" /* BANKERS_ACCEPTANCE */, "BN" /* BANK_NOTES */, "BOX" /* BILL_OF_EXCHANGES */, "BRADY" /* BRADY_BOND */, "BRIDGE" /* BRIDGE_LOAN */, "BUYSELL" /* BUY_SELLBACK */, "CB" /* CONVERTIBLE_BOND */, "CD" /* CERTIFICATE_OF_DEPOSIT */, "CL" /* CALL_LOANS */, "CMBS" /* CORP_MORTGAGE_BACKED_SECURITIES */, "CMO" /* COLLATERALIZED_MORTGAGE_OBLIGATION */, "COFO" /* CERTIFICATE_OF_OBLIGATION */, "COFP" /* CERTIFICATE_OF_PARTICIPATION */, "CORP" /* CORPORATE_BOND */, "CP" /* COMMERCIAL_PAPER */, "CPP" /* CORPORATE_PRIVATE_PLACEMENT */, "CS" /* COMMON_STOCK */, "DEFLTED" /* DEFAULTED */, "DINP" /* DEBTOR_IN_POSSESSION */, "DN" /* DEPOSIT_NOTES */, "DUAL" /* DUAL_CURRENCY */, "EUCD" /* EURO_CERTIFICATE_OF_DEPOSIT */, "EUCORP" /* EURO_CORPORATE_BOND */, "EUCP" /* EURO_COMMERCIAL_PAPER */, "EUSOV" /* EURO_SOVEREIGNS */, "EUSUPRA" /* EURO_SUPRANATIONAL_COUPONS */, "FAC" /* FEDERAL_AGENCY_COUPON */, "FADN" /* FEDERAL_AGENCY_DISCOUNT_NOTE */, "FOR" /* FOREIGN_EXCHANGE_CONTRACT */, "FORWARD" /* FORWARD */, "FUT" /* FUTURE */, "GO" /* GENERAL_OBLIGATION_BONDS */, "IET" /* IOETTE_MORTGAGE */, "LOFC" /* LETTER_OF_CREDIT */, "LQN" /* LIQUIDITY_NOTE */, "MATURED" /* MATURED */, "MBS" /* MORTGAGE_BACKED_SECURITIES */, "MF" /* MUTUAL_FUND */, "MIO" /* MORTGAGE_INTEREST_ONLY */, "MLEG" /* MULTILEG_INSTRUMENT */, "MPO" /* MORTGAGE_PRINCIPAL_ONLY */, "MPP" /* MORTGAGE_PRIVATE_PLACEMENT */, "MPT" /* MISCELLANEOUS_PASS_THROUGH */, "MT" /* MANDATORY_TENDER */, "MTN" /* MEDIUM_TERM_NOTES */, "NONE" /* NO_SECURITY_TYPE */, "ONITE" /* OVERNIGHT */, "OPT" /* OPTION */, "PEF" /* PRIVATE_EXPORT_FUNDING */, "PFAND" /* PFANDBRIEFE */, "PN" /* PROMISSORY_NOTE */, "PS" /* PREFERRED_STOCK */, "PZFJ" /* PLAZOS_FIJOS */, "RAN" /* REVENUE_ANTICIPATION_NOTE */, "REPLACD" /* REPLACED */, "REPO" /* REPURCHASE */, "RETIRED" /* RETIRED */, "REV" /* REVENUE_BONDS */, "RVLV" /* REVOLVER_LOAN */, "RVLVTRM" /* REVOLVER_TERM_LOAN */, "SECLOAN" /* SECURITIES_LOAN */, "SECPLEDGE" /* SECURITIES_PLEDGE */, "SPCLA" /* SPECIAL_ASSESSMENT */, "SPCLO" /* SPECIAL_OBLIGATION */, "SPCLT" /* SPECIAL_TAX */, "STN" /* SHORT_TERM_LOAN_NOTE */, "STRUCT" /* STRUCTURED_NOTES */, "SUPRA" /* USD_SUPRANATIONAL_COUPONS */, "SWING" /* SWING_LINE_FACILITY */, "TAN" /* TAX_ANTICIPATION_NOTE */, "TAXA" /* TAX_ALLOCATION */, "TBA" /* TO_BE_ANNOUNCED */, "TBILL" /* US_TREASURY_BILL_TBILL */, "TBOND" /* US_TREASURY_BOND */, "TCAL" /* PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE */, "TD" /* TIME_DEPOSIT */, "TECP" /* TAX_EXEMPT_COMMERCIAL_PAPER */, "TERM" /* TERM_LOAN */, "TINT" /* INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE */, "TIPS" /* TREASURY_INFLATION_PROTECTED_SECURITIES */, "TNOTE" /* US_TREASURY_NOTE_TNOTE */, "TPRN" /* PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE */, "TRAN" /* TAX_REVENUE_ANTICIPATION_NOTE */, "UST" /* US_TREASURY_NOTE_UST */, "USTB" /* US_TREASURY_BILL_USTB */, "VRDN" /* VARIABLE_RATE_DEMAND_NOTE */, "WAR" /* WARRANT */, "WITHDRN" /* WITHDRAWN */, "WLD" /* WILDCARD_ENTRY */, "XCN" /* EXTENDED_COMM_NOTE */, "XLINKD" /* INDEXED_LINKED */, "YANK" /* YANKEE_CORPORATE_BOND */, "YCD" /* YANKEE_CERTIFICATE_OF_DEPOSIT */, "OOP" /* OPTIONS_ON_PHYSICAL */, "OOF" /* OPTIONS_ON_FUTURES */, "CASH" /* CASH */), f0.Var{1, 65536}},
		SecuritySubType762:            f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		MaturityMonthYear200:          f0.Fld{Opt, f0.ASCII, f0.MonthYearTime(), f0.Var{6, 8}},
		MaturityDate541:               f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		CouponPaymentDate224:          f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		IssueDate225:                  f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		RepoCollateralSecurityType239: f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		RepurchaseTerm226:             f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		RepurchaseRate227:             f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		Factor228:                     f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		CreditRating255:               f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrRegistry543:              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		CountryOfIssue470:             f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{2}},
		StateOrProvinceOfIssue471:     f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		LocaleOfIssue472:              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		RedemptionDate240:             f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		StrikePrice202:                f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		StrikeCurrency947:             f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{3}},
		OptAttribute206:               f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		ContractMultiplier231:         f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		CouponRate223:                 f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		SecurityExchange207:           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		Issuer106:                     f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EncodedIssuerLen348:           f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		EncodedIssuer349:              f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		SecurityDesc107:               f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EncodedSecurityDescLen350:     f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		EncodedSecurityDesc351:        f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		Pool691:                       f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		ContractSettlMonth667:         f0.Fld{Opt, f0.ASCII, f0.MonthYearTime(), f0.Var{6, 8}},
		CPProgram875:                  f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* 3 */, 2 /* 4 */, 99 /* OTHER */), f0.Var{1, 19}},
		CPRegType876:                  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		DatedDate873:                  f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		InterestAccrualDate874:        f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		SecurityStatus965:             f0.Fld{Opt, f0.ASCII, f0.String("1" /* ACTIVE */, "2" /* INACTIVE */), f0.Var{1, 65536}},
		SettleOnOpenFlag966:           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrmtAssignmentMethod1049:   f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		StrikeMultiplier967:           f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		StrikeValue968:                f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		MinPriceIncrement969:          f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		PositionLimit970:              f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		NTPositionLimit971:            f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		UnitOfMeasure996:              f0.Fld{Opt, f0.ASCII, f0.String("MWh" /* MEGAWATT_HOURS */, "MMBtu" /* ONE_MILLION_BTU */, "Bbl" /* BARRELS */, "Gal" /* GALLONS */, "t" /* METRIC_TONS */, "tn" /* TONS */, "MMbbl" /* MILLION_BARRELS */, "lbs" /* POUNDS */, "oz_tr" /* TROY_OUNCES */, "USD" /* US_DOLLARS */, "Bcf" /* BILLION_CUBIC_FEET */, "Bu" /* BUSHELS */), f0.Var{1, 65536}},
		TimeUnit997:                   f0.Fld{Opt, f0.ASCII, f0.String("S" /* SECOND */, "Min" /* MINUTE */, "H" /* HOUR */, "D" /* DAY */, "Wk" /* WEEK */, "Mo" /* MONTH */, "Yr" /* YEAR */), f0.Var{1, 65536}},
		MaturityTime1079:              f0.Fld{Opt, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		SecurityAltID455:              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		SecurityAltIDSource456:        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EventType865:                  f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* PUT */, 2 /* CALL */, 3 /* TENDER */, 4 /* SINKING_FUND_CALL */, 99 /* OTHER */, 5 /* ACTIVATION */, 6 /* INACTIVIATION */), f0.Var{1, 19}},
		EventDate866:                  f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		EventPx867:                    f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		EventText868:                  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrumentPartyID1019:         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrumentPartyIDSource1050:   f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		InstrumentPartyRole1051:       f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		InstrumentPartySubID1053:      f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrumentPartySubIDType1054:  f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
	},
	Unknown0: f0.UnknownFld{f0.ASCII, f0.Unknown(), f0.Var{1, 65536}},
	Sort: []int{
		TradSesReqID335,               // STRING
		TradingSessionID336,           // STRING
		TradingSessionSubID625,        // STRING
		TradSesMethod338,              // INT
		TradSesMode339,                // INT
		UnsolicitedIndicator325,       // BOOLEAN
		TradSesStatus340,              // INT
		TradSesStatusRejReason567,     // INT
		TradSesStartTime341,           // UTCTIMESTAMP
		TradSesOpenTime342,            // UTCTIMESTAMP
		TradSesPreCloseTime343,        // UTCTIMESTAMP
		TradSesCloseTime344,           // UTCTIMESTAMP
		TradSesEndTime345,             // UTCTIMESTAMP
		TotalVolumeTraded387,          // QTY
		Text58,                        // STRING
		EncodedTextLen354,             // LENGTH
		EncodedText355,                // DATA
		Symbol55,                      // STRING
		SymbolSfx65,                   // STRING
		SecurityID48,                  // STRING
		SecurityIDSource22,            // STRING
		Product460,                    // INT
		CFICode461,                    // STRING
		SecurityType167,               // STRING
		SecuritySubType762,            // STRING
		MaturityMonthYear200,          // MONTHYEAR
		MaturityDate541,               // LOCALMKTDATE
		CouponPaymentDate224,          // LOCALMKTDATE
		IssueDate225,                  // LOCALMKTDATE
		RepoCollateralSecurityType239, // INT
		RepurchaseTerm226,             // INT
		RepurchaseRate227,             // PERCENTAGE
		Factor228,                     // FLOAT
		CreditRating255,               // STRING
		InstrRegistry543,              // STRING
		CountryOfIssue470,             // COUNTRY
		StateOrProvinceOfIssue471,     // STRING
		LocaleOfIssue472,              // STRING
		RedemptionDate240,             // LOCALMKTDATE
		StrikePrice202,                // PRICE
		StrikeCurrency947,             // CURRENCY
		OptAttribute206,               // CHAR
		ContractMultiplier231,         // FLOAT
		CouponRate223,                 // PERCENTAGE
		SecurityExchange207,           // EXCHANGE
		Issuer106,                     // STRING
		EncodedIssuerLen348,           // LENGTH
		EncodedIssuer349,              // DATA
		SecurityDesc107,               // STRING
		EncodedSecurityDescLen350,     // LENGTH
		EncodedSecurityDesc351,        // DATA
		Pool691,                       // STRING
		ContractSettlMonth667,         // MONTHYEAR
		CPProgram875,                  // INT
		CPRegType876,                  // STRING
		DatedDate873,                  // LOCALMKTDATE
		InterestAccrualDate874,        // LOCALMKTDATE
		SecurityStatus965,             // STRING
		SettleOnOpenFlag966,           // STRING
		InstrmtAssignmentMethod1049,   // CHAR
		StrikeMultiplier967,           // FLOAT
		StrikeValue968,                // FLOAT
		MinPriceIncrement969,          // FLOAT
		PositionLimit970,              // INT
		NTPositionLimit971,            // INT
		UnitOfMeasure996,              // STRING
		TimeUnit997,                   // STRING
		MaturityTime1079,              // TZTIMEONLY
		SecurityAltID455,              // STRING
		SecurityAltIDSource456,        // STRING
		EventType865,                  // INT
		EventDate866,                  // LOCALMKTDATE
		EventPx867,                    // PRICE
		EventText868,                  // STRING
		InstrumentPartyID1019,         // STRING
		InstrumentPartyIDSource1050,   // CHAR
		InstrumentPartyRole1051,       // INT
		InstrumentPartySubID1053,      // STRING
		InstrumentPartySubIDType1054,  // INT
	},
}

const Req, Opt = true, false

const (
	TradSesReqID335               = 335  // STRING
	TradingSessionID336           = 336  // STRING
	TradingSessionSubID625        = 625  // STRING
	TradSesMethod338              = 338  // INT
	TradSesMode339                = 339  // INT
	UnsolicitedIndicator325       = 325  // BOOLEAN
	TradSesStatus340              = 340  // INT
	TradSesStatusRejReason567     = 567  // INT
	TradSesStartTime341           = 341  // UTCTIMESTAMP
	TradSesOpenTime342            = 342  // UTCTIMESTAMP
	TradSesPreCloseTime343        = 343  // UTCTIMESTAMP
	TradSesCloseTime344           = 344  // UTCTIMESTAMP
	TradSesEndTime345             = 345  // UTCTIMESTAMP
	TotalVolumeTraded387          = 387  // QTY
	Text58                        = 58   // STRING
	EncodedTextLen354             = 354  // LENGTH
	EncodedText355                = 355  // DATA
	Symbol55                      = 55   // STRING
	SymbolSfx65                   = 65   // STRING
	SecurityID48                  = 48   // STRING
	SecurityIDSource22            = 22   // STRING
	Product460                    = 460  // INT
	CFICode461                    = 461  // STRING
	SecurityType167               = 167  // STRING
	SecuritySubType762            = 762  // STRING
	MaturityMonthYear200          = 200  // MONTHYEAR
	MaturityDate541               = 541  // LOCALMKTDATE
	CouponPaymentDate224          = 224  // LOCALMKTDATE
	IssueDate225                  = 225  // LOCALMKTDATE
	RepoCollateralSecurityType239 = 239  // INT
	RepurchaseTerm226             = 226  // INT
	RepurchaseRate227             = 227  // PERCENTAGE
	Factor228                     = 228  // FLOAT
	CreditRating255               = 255  // STRING
	InstrRegistry543              = 543  // STRING
	CountryOfIssue470             = 470  // COUNTRY
	StateOrProvinceOfIssue471     = 471  // STRING
	LocaleOfIssue472              = 472  // STRING
	RedemptionDate240             = 240  // LOCALMKTDATE
	StrikePrice202                = 202  // PRICE
	StrikeCurrency947             = 947  // CURRENCY
	OptAttribute206               = 206  // CHAR
	ContractMultiplier231         = 231  // FLOAT
	CouponRate223                 = 223  // PERCENTAGE
	SecurityExchange207           = 207  // EXCHANGE
	Issuer106                     = 106  // STRING
	EncodedIssuerLen348           = 348  // LENGTH
	EncodedIssuer349              = 349  // DATA
	SecurityDesc107               = 107  // STRING
	EncodedSecurityDescLen350     = 350  // LENGTH
	EncodedSecurityDesc351        = 351  // DATA
	Pool691                       = 691  // STRING
	ContractSettlMonth667         = 667  // MONTHYEAR
	CPProgram875                  = 875  // INT
	CPRegType876                  = 876  // STRING
	DatedDate873                  = 873  // LOCALMKTDATE
	InterestAccrualDate874        = 874  // LOCALMKTDATE
	SecurityStatus965             = 965  // STRING
	SettleOnOpenFlag966           = 966  // STRING
	InstrmtAssignmentMethod1049   = 1049 // CHAR
	StrikeMultiplier967           = 967  // FLOAT
	StrikeValue968                = 968  // FLOAT
	MinPriceIncrement969          = 969  // FLOAT
	PositionLimit970              = 970  // INT
	NTPositionLimit971            = 971  // INT
	UnitOfMeasure996              = 996  // STRING
	TimeUnit997                   = 997  // STRING
	MaturityTime1079              = 1079 // TZTIMEONLY
	SecurityAltID455              = 455  // STRING
	SecurityAltIDSource456        = 456  // STRING
	EventType865                  = 865  // INT
	EventDate866                  = 866  // LOCALMKTDATE
	EventPx867                    = 867  // PRICE
	EventText868                  = 868  // STRING
	InstrumentPartyID1019         = 1019 // STRING
	InstrumentPartyIDSource1050   = 1050 // CHAR
	InstrumentPartyRole1051       = 1051 // INT
	InstrumentPartySubID1053      = 1053 // STRING
	InstrumentPartySubIDType1054  = 1054 // INT
)
