// Code generated by protofix; DO NOT EDIT.
// Copyright 2021 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package fix50businessmessagereject is a format of the FIX.5.0 BusinessMessageReject message.
package fix50businessmessagereject

import (
	f0 "github.com/protofix/protofix/codecfix"
	"github.com/protofix/protofix/marshfix"
)

var (
	FIX50BusinessMessageRejectMarshaler   = marshfix.Marshal{Tag: "FIX50", Format: FIX50BusinessMessageReject}
	FIX50BusinessMessageRejectUnmarshaler = marshfix.Unmarshal{Tag: "FIX50", Format: FIX50BusinessMessageReject}
)

// FIX50BusinessMessageReject is a FIX.5.0 format of the BusinessMessageReject message which maps the codecs into individual fields.
var FIX50BusinessMessageReject = f0.Format{
	Fields: map[int]f0.Codec{
		RefSeqNum45:             f0.Fld{Opt, f0.ASCII, f0.SeqNum(), f0.Var{1, 19}},
		RefMsgType372:           f0.Fld{Req, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		BusinessRejectRefID379:  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		BusinessRejectReason380: f0.Fld{Req, f0.ASCII, f0.IntDefault(0 /* OTHER */, 1 /* UNKNOWN_ID */, 2 /* UNKNOWN_SECURITY */, 3 /* UNKNOWN_MESSAGE_TYPE */, 4 /* APPLICATION_NOT_AVAILABLE */, 5 /* CONDITIONALLY_REQUIRED_FIELD_MISSING */, 6 /* NOT_AUTHORIZED */, 7 /* DELIVERTO_FIRM_NOT_AVAILABLE_AT_THIS_TIME */, 18 /* INVALID_PRICE_INCREMENT */), f0.Var{1, 19}},
		Text58:                  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EncodedTextLen354:       f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		EncodedText355:          f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
	},
	Unknown0: f0.UnknownFld{f0.ASCII, f0.Unknown(), f0.Var{1, 65536}},
	Sort: []int{
		RefSeqNum45,             // SEQNUM
		RefMsgType372,           // STRING
		BusinessRejectRefID379,  // STRING
		BusinessRejectReason380, // INT
		Text58,                  // STRING
		EncodedTextLen354,       // LENGTH
		EncodedText355,          // DATA
	},
}

const Req, Opt = true, false

const (
	RefSeqNum45             = 45  // SEQNUM
	RefMsgType372           = 372 // STRING
	BusinessRejectRefID379  = 379 // STRING
	BusinessRejectReason380 = 380 // INT
	Text58                  = 58  // STRING
	EncodedTextLen354       = 354 // LENGTH
	EncodedText355          = 355 // DATA
)
