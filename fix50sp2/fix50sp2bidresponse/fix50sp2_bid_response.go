// Code generated by protofix; DO NOT EDIT.
// Copyright 2021 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package fix50sp2bidresponse is a format of the FIX.5.0 servicepack 2 BidResponse message.
package fix50sp2bidresponse

import (
	f0 "github.com/protofix/protofix/codecfix"
	"github.com/protofix/protofix/marshfix"
)

var (
	FIX50SP2BidResponseMarshaler   = marshfix.Marshal{Tag: "FIX50SP2", Format: FIX50SP2BidResponse}
	FIX50SP2BidResponseUnmarshaler = marshfix.Unmarshal{Tag: "FIX50SP2", Format: FIX50SP2BidResponse}
)

// FIX50SP2BidResponse is a FIX.5.0 servicepack 2 format of the BidResponse message which maps the codecs into individual fields.
var FIX50SP2BidResponse = f0.Format{
	Fields: map[int]f0.Codec{
		BidID390:               f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		ClientBidID391:         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		ListID66:               f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		Country421:             f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{2}},
		Side54:                 f0.Fld{Opt, f0.ASCII, f0.String("1" /* BUY */, "2" /* SELL */, "3" /* BUY_MINUS */, "4" /* SELL_PLUS */, "5" /* SELL_SHORT */, "6" /* SELL_SHORT_EXEMPT */, "7" /* UNDISCLOSED */, "8" /* CROSS */, "9" /* CROSS_SHORT */, "A" /* CROSS_SHORT_EXEMPT */, "B" /* AS_DEFINED */, "C" /* OPPOSITE */, "D" /* SUBSCRIBE */, "E" /* REDEEM */, "F" /* LEND */, "G" /* BORROW */), f0.Con{1}},
		Price44:                f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		PriceType423:           f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* PERCENTAGE */, 10 /* FIXED_CABINET_TRADE_PRICE */, 11 /* VARIABLE_CABINET_TRADE_PRICE */, 2 /* PER_UNIT */, 3 /* FIXED_AMOUNT */, 4 /* DISCOUNT */, 5 /* PREMIUM */, 6 /* SPREAD */, 7 /* TED_PRICE */, 8 /* TED_YIELD */, 9 /* YIELD */, 13 /* PRODUCT_TICKS_IN_HALFS */, 14 /* PRODUCT_TICKS_IN_FOURTHS */, 15 /* PRODUCT_TICKS_IN_EIGHTS */, 16 /* PRODUCT_TICKS_IN_SIXTEENTHS */, 17 /* PRODUCT_TICKS_IN_THIRTY_SECONDS */, 18 /* PRODUCT_TICKS_IN_SIXTY_FORTHS */, 19 /* PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTS */), f0.Var{1, 19}},
		FairValue406:           f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		NetGrossInd430:         f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* NET */, 2 /* GROSS */), f0.Var{1, 19}},
		SettlType63:            f0.Fld{Opt, f0.ASCII, f0.String("0" /* REGULAR */, "1" /* CASH */, "2" /* NEXT_DAY */, "3" /* T_PLUS_2 */, "4" /* T_PLUS_3 */, "5" /* T_PLUS_4 */, "6" /* FUTURE */, "7" /* WHEN_AND_IF_ISSUED */, "8" /* SELLERS_OPTION */, "9" /* T_PLUS_5 */, "C" /* FX_SPOT_NEXT_SETTLEMENT */, "B" /* BROKEN_DATE */), f0.Var{1, 65536}},
		SettlDate64:            f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		TradingSessionID336:    f0.Fld{Opt, f0.ASCII, f0.String("1" /* DAY */, "2" /* HALFDAY */, "3" /* MORNING */, "4" /* AFTERNOON */, "5" /* EVENING */, "6" /* AFTER_HOURS */), f0.Var{1, 65536}},
		TradingSessionSubID625: f0.Fld{Opt, f0.ASCII, f0.String("1" /* PRE_TRADING */, "2" /* OPENING_OR_OPENING_AUCTION */, "3" /* 3 */, "4" /* CLOSING_OR_CLOSING_AUCTION */, "5" /* POST_TRADING */, "6" /* INTRADAY_AUCTION */, "7" /* QUIESCENT */), f0.Var{1, 65536}},
		Text58:                 f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EncodedTextLen354:      f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		EncodedText355:         f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		Commission12:           f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		CommType13:             f0.Fld{Opt, f0.ASCII, f0.String("1" /* PER_UNIT */, "2" /* PERCENT */, "3" /* ABSOLUTE */, "4" /* PERCENTAGE_WAIVED_4 */, "5" /* PERCENTAGE_WAIVED_5 */, "6" /* POINTS_PER_BOND_OR_CONTRACT */), f0.Con{1}},
		CommCurrency479:        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{3}},
		FundRenewWaiv497:       f0.Fld{Opt, f0.ASCII, f0.String("N" /* NO */, "Y" /* YES */), f0.Con{1}},
	},
	Unknown0: f0.UnknownFld{f0.ASCII, f0.Unknown(), f0.Var{1, 65536}},
	Sort: []int{
		BidID390,               // STRING
		ClientBidID391,         // STRING
		ListID66,               // STRING
		Country421,             // COUNTRY
		Side54,                 // CHAR
		Price44,                // PRICE
		PriceType423,           // INT
		FairValue406,           // AMT
		NetGrossInd430,         // INT
		SettlType63,            // STRING
		SettlDate64,            // LOCALMKTDATE
		TradingSessionID336,    // STRING
		TradingSessionSubID625, // STRING
		Text58,                 // STRING
		EncodedTextLen354,      // LENGTH
		EncodedText355,         // DATA
		Commission12,           // AMT
		CommType13,             // CHAR
		CommCurrency479,        // CURRENCY
		FundRenewWaiv497,       // CHAR
	},
}

const Req, Opt = true, false

const (
	BidID390               = 390 // STRING
	ClientBidID391         = 391 // STRING
	ListID66               = 66  // STRING
	Country421             = 421 // COUNTRY
	Side54                 = 54  // CHAR
	Price44                = 44  // PRICE
	PriceType423           = 423 // INT
	FairValue406           = 406 // AMT
	NetGrossInd430         = 430 // INT
	SettlType63            = 63  // STRING
	SettlDate64            = 64  // LOCALMKTDATE
	TradingSessionID336    = 336 // STRING
	TradingSessionSubID625 = 625 // STRING
	Text58                 = 58  // STRING
	EncodedTextLen354      = 354 // LENGTH
	EncodedText355         = 355 // DATA
	Commission12           = 12  // AMT
	CommType13             = 13  // CHAR
	CommCurrency479        = 479 // CURRENCY
	FundRenewWaiv497       = 497 // CHAR
)
