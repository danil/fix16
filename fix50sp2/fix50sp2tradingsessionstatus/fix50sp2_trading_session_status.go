// Code generated by protofix; DO NOT EDIT.
// Copyright 2021 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package fix50sp2tradingsessionstatus is a format of the FIX.5.0 servicepack 2 TradingSessionStatus message.
package fix50sp2tradingsessionstatus

import (
	f0 "github.com/protofix/protofix/codecfix"
	"github.com/protofix/protofix/marshfix"
)

var (
	FIX50SP2TradingSessionStatusMarshaler   = marshfix.Marshal{Tag: "FIX50SP2", Format: FIX50SP2TradingSessionStatus}
	FIX50SP2TradingSessionStatusUnmarshaler = marshfix.Unmarshal{Tag: "FIX50SP2", Format: FIX50SP2TradingSessionStatus}
)

// FIX50SP2TradingSessionStatus is a FIX.5.0 servicepack 2 format of the TradingSessionStatus message which maps the codecs into individual fields.
var FIX50SP2TradingSessionStatus = f0.Format{
	Fields: map[int]f0.Codec{
		TradSesReqID335:                           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		TradingSessionID336:                       f0.Fld{Req, f0.ASCII, f0.String("1" /* DAY */, "2" /* HALFDAY */, "3" /* MORNING */, "4" /* AFTERNOON */, "5" /* EVENING */, "6" /* AFTER_HOURS */), f0.Var{1, 65536}},
		TradingSessionSubID625:                    f0.Fld{Opt, f0.ASCII, f0.String("1" /* PRE_TRADING */, "2" /* OPENING_OR_OPENING_AUCTION */, "3" /* 3 */, "4" /* CLOSING_OR_CLOSING_AUCTION */, "5" /* POST_TRADING */, "6" /* INTRADAY_AUCTION */, "7" /* QUIESCENT */), f0.Var{1, 65536}},
		TradSesMethod338:                          f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* ELECTRONIC */, 2 /* OPEN_OUTCRY */, 3 /* TWO_PARTY */), f0.Var{1, 19}},
		TradSesMode339:                            f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* TESTING */, 2 /* SIMULATED */, 3 /* PRODUCTION */), f0.Var{1, 19}},
		UnsolicitedIndicator325:                   f0.Fld{Opt, f0.ASCII, f0.BoolDefault(false /* NO */, true /* YES */), f0.Con{1}},
		TradSesStatus340:                          f0.Fld{Req, f0.ASCII, f0.IntDefault(0 /* UNKNOWN */, 1 /* HALTED */, 2 /* OPEN */, 3 /* CLOSED */, 4 /* PRE_OPEN */, 5 /* PRE_CLOSE */, 6 /* REQUEST_REJECTED */), f0.Var{1, 19}},
		TradSesStatusRejReason567:                 f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* UNKNOWN_OR_INVALID_TRADINGSESSIONID */, 99 /* OTHER */), f0.Var{1, 19}},
		TradSesStartTime341:                       f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TradSesOpenTime342:                        f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TradSesPreCloseTime343:                    f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TradSesCloseTime344:                       f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TradSesEndTime345:                         f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		TotalVolumeTraded387:                      f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		Text58:                                    f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EncodedTextLen354:                         f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		EncodedText355:                            f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		MarketID1301:                              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		MarketSegmentID1300:                       f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		TradSesEvent1368:                          f0.Fld{Opt, f0.ASCII, f0.IntDefault(0 /* TRADING_RESUMES */, 1 /* CHANGE_OF_TRADING_SESSION */, 2 /* CHANGE_OF_TRADING_SUBSESSION */, 3 /* CHANGE_OF_TRADING_STATUS */), f0.Var{1, 19}},
		Symbol55:                                  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		SymbolSfx65:                               f0.Fld{Opt, f0.ASCII, f0.String("CD" /* EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE */, "WI" /* WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN */), f0.Var{1, 65536}},
		SecurityID48:                              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		SecurityIDSource22:                        f0.Fld{Opt, f0.ASCII, f0.String("1" /* CUSIP */, "2" /* SEDOL */, "3" /* QUIK */, "4" /* ISIN_NUMBER */, "5" /* RIC_CODE */, "6" /* ISO_CURRENCY_CODE */, "7" /* ISO_COUNTRY_CODE */, "8" /* EXCHANGE_SYMBOL */, "9" /* CONSOLIDATED_TAPE_ASSOCIATION */, "A" /* BLOOMBERG_SYMBOL */, "B" /* WERTPAPIER */, "C" /* DUTCH */, "D" /* VALOREN */, "E" /* SICOVAM */, "F" /* BELGIAN */, "G" /* COMMON */, "H" /* CLEARING_HOUSE */, "I" /* ISDA_FPML_PRODUCT_SPECIFICATION */, "J" /* OPTION_PRICE_REPORTING_AUTHORITY */, "L" /* LETTER_OF_CREDIT */, "K" /* ISDA_FPML_PRODUCT_URL */, "M" /* MARKETPLACE_ASSIGNED_IDENTIFIER */), f0.Var{1, 65536}},
		Product460:                                f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* AGENCY */, 10 /* MORTGAGE */, 11 /* MUNICIPAL */, 12 /* OTHER */, 13 /* FINANCING */, 2 /* COMMODITY */, 3 /* CORPORATE */, 4 /* CURRENCY */, 5 /* EQUITY */, 6 /* GOVERNMENT */, 7 /* INDEX */, 8 /* LOAN */, 9 /* MONEYMARKET */), f0.Var{1, 19}},
		CFICode461:                                f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		SecurityType167:                           f0.Fld{Opt, f0.ASCII, f0.String("ABS" /* ASSET_BACKED_SECURITIES */, "AMENDED" /* AMENDED_RESTATED */, "AN" /* OTHER_ANTICIPATION_NOTES */, "BA" /* BANKERS_ACCEPTANCE */, "BN" /* BANK_NOTES */, "BOX" /* BILL_OF_EXCHANGES */, "BRADY" /* BRADY_BOND */, "BRIDGE" /* BRIDGE_LOAN */, "BUYSELL" /* BUY_SELLBACK */, "CB" /* CONVERTIBLE_BOND */, "CD" /* CERTIFICATE_OF_DEPOSIT */, "CL" /* CALL_LOANS */, "CMBS" /* CORP_MORTGAGE_BACKED_SECURITIES */, "CMO" /* COLLATERALIZED_MORTGAGE_OBLIGATION */, "COFO" /* CERTIFICATE_OF_OBLIGATION */, "COFP" /* CERTIFICATE_OF_PARTICIPATION */, "CORP" /* CORPORATE_BOND */, "CP" /* COMMERCIAL_PAPER */, "CPP" /* CORPORATE_PRIVATE_PLACEMENT */, "CS" /* COMMON_STOCK */, "DEFLTED" /* DEFAULTED */, "DINP" /* DEBTOR_IN_POSSESSION */, "DN" /* DEPOSIT_NOTES */, "DUAL" /* DUAL_CURRENCY */, "EUCD" /* EURO_CERTIFICATE_OF_DEPOSIT */, "EUCORP" /* EURO_CORPORATE_BOND */, "EUCP" /* EURO_COMMERCIAL_PAPER */, "EUSOV" /* EURO_SOVEREIGNS */, "EUSUPRA" /* EURO_SUPRANATIONAL_COUPONS */, "FAC" /* FEDERAL_AGENCY_COUPON */, "FADN" /* FEDERAL_AGENCY_DISCOUNT_NOTE */, "FOR" /* FOREIGN_EXCHANGE_CONTRACT */, "FORWARD" /* FORWARD */, "FUT" /* FUTURE */, "GO" /* GENERAL_OBLIGATION_BONDS */, "IET" /* IOETTE_MORTGAGE */, "LOFC" /* LETTER_OF_CREDIT */, "LQN" /* LIQUIDITY_NOTE */, "MATURED" /* MATURED */, "MBS" /* MORTGAGE_BACKED_SECURITIES */, "MF" /* MUTUAL_FUND */, "MIO" /* MORTGAGE_INTEREST_ONLY */, "MLEG" /* MULTILEG_INSTRUMENT */, "MPO" /* MORTGAGE_PRINCIPAL_ONLY */, "MPP" /* MORTGAGE_PRIVATE_PLACEMENT */, "MPT" /* MISCELLANEOUS_PASS_THROUGH */, "MT" /* MANDATORY_TENDER */, "MTN" /* MEDIUM_TERM_NOTES */, "NONE" /* NO_SECURITY_TYPE */, "ONITE" /* OVERNIGHT */, "OPT" /* OPTION */, "PEF" /* PRIVATE_EXPORT_FUNDING */, "PFAND" /* PFANDBRIEFE */, "PN" /* PROMISSORY_NOTE */, "PS" /* PREFERRED_STOCK */, "PZFJ" /* PLAZOS_FIJOS */, "RAN" /* REVENUE_ANTICIPATION_NOTE */, "REPLACD" /* REPLACED */, "REPO" /* REPURCHASE */, "RETIRED" /* RETIRED */, "REV" /* REVENUE_BONDS */, "RVLV" /* REVOLVER_LOAN */, "RVLVTRM" /* REVOLVER_TERM_LOAN */, "SECLOAN" /* SECURITIES_LOAN */, "SECPLEDGE" /* SECURITIES_PLEDGE */, "SPCLA" /* SPECIAL_ASSESSMENT */, "SPCLO" /* SPECIAL_OBLIGATION */, "SPCLT" /* SPECIAL_TAX */, "STN" /* SHORT_TERM_LOAN_NOTE */, "STRUCT" /* STRUCTURED_NOTES */, "SUPRA" /* USD_SUPRANATIONAL_COUPONS */, "SWING" /* SWING_LINE_FACILITY */, "TAN" /* TAX_ANTICIPATION_NOTE */, "TAXA" /* TAX_ALLOCATION */, "TBA" /* TO_BE_ANNOUNCED */, "TBILL" /* US_TREASURY_BILL_TBILL */, "TBOND" /* US_TREASURY_BOND */, "TCAL" /* PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE */, "TD" /* TIME_DEPOSIT */, "TECP" /* TAX_EXEMPT_COMMERCIAL_PAPER */, "TERM" /* TERM_LOAN */, "TINT" /* INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE */, "TIPS" /* TREASURY_INFLATION_PROTECTED_SECURITIES */, "TNOTE" /* US_TREASURY_NOTE_TNOTE */, "TPRN" /* PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE */, "TRAN" /* TAX_REVENUE_ANTICIPATION_NOTE */, "UST" /* US_TREASURY_NOTE_UST */, "USTB" /* US_TREASURY_BILL_USTB */, "VRDN" /* VARIABLE_RATE_DEMAND_NOTE */, "WAR" /* WARRANT */, "WITHDRN" /* WITHDRAWN */, "?" /* WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST */, "XCN" /* EXTENDED_COMM_NOTE */, "XLINKD" /* INDEXED_LINKED */, "YANK" /* YANKEE_CORPORATE_BOND */, "YCD" /* YANKEE_CERTIFICATE_OF_DEPOSIT */, "OOP" /* OPTIONS_ON_PHYSICAL */, "OOF" /* OPTIONS_ON_FUTURES */, "CASH" /* CASH */, "OOC" /* OPTIONS_ON_COMBO */, "IRS" /* INTEREST_RATE_SWAP */, "BDN" /* BANK_DEPOSITORY_NOTE */, "CAMM" /* CANADIAN_MONEY_MARKETS */, "CAN" /* CANADIAN_TREASURY_NOTES */, "CTB" /* CANADIAN_TREASURY_BILLS */, "CDS" /* CREDIT_DEFAULT_SWAP */, "CMB" /* CANADIAN_MORTGAGE_BONDS */, "EUFRN" /* EURO_CORPORATE_FLOATING_RATE_NOTES */, "FRN" /* US_CORPORATE_FLOATING_RATE_NOTES */, "PROV" /* CANADIAN_PROVINCIAL_BONDS */, "SLQN" /* SECURED_LIQUIDITY_NOTE */, "TB" /* TREASURY_BILL */, "TLQN" /* TERM_LIQUIDITY_NOTE */, "TMCP" /* TAXABLE_MUNICIPAL_CP */, "FXNDF" /* NON_DELIVERABLE_FORWARD */, "FXSPOT" /* FX_SPOT */, "FXFWD" /* FX_FORWARD */, "FXSWAP" /* FX_SWAP */), f0.Var{1, 65536}},
		SecuritySubType762:                        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		MaturityMonthYear200:                      f0.Fld{Opt, f0.ASCII, f0.MonthYearTime(), f0.Var{6, 8}},
		MaturityDate541:                           f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		CouponPaymentDate224:                      f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		IssueDate225:                              f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		RepoCollateralSecurityType239:             f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		RepurchaseTerm226:                         f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		RepurchaseRate227:                         f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		Factor228:                                 f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		CreditRating255:                           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrRegistry543:                          f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		CountryOfIssue470:                         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{2}},
		StateOrProvinceOfIssue471:                 f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		LocaleOfIssue472:                          f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		RedemptionDate240:                         f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		StrikePrice202:                            f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		StrikeCurrency947:                         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{3}},
		OptAttribute206:                           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		ContractMultiplier231:                     f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		CouponRate223:                             f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		SecurityExchange207:                       f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		Issuer106:                                 f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EncodedIssuerLen348:                       f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		EncodedIssuer349:                          f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		SecurityDesc107:                           f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EncodedSecurityDescLen350:                 f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		EncodedSecurityDesc351:                    f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		Pool691:                                   f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		ContractSettlMonth667:                     f0.Fld{Opt, f0.ASCII, f0.MonthYearTime(), f0.Var{6, 8}},
		CPProgram875:                              f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* 3 */, 2 /* 4 */, 99 /* OTHER */), f0.Var{1, 19}},
		CPRegType876:                              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		DatedDate873:                              f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		InterestAccrualDate874:                    f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		SecurityStatus965:                         f0.Fld{Opt, f0.ASCII, f0.String("1" /* ACTIVE */, "2" /* INACTIVE */), f0.Var{1, 65536}},
		SettleOnOpenFlag966:                       f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrmtAssignmentMethod1049:               f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		StrikeMultiplier967:                       f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		StrikeValue968:                            f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		MinPriceIncrement969:                      f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		PositionLimit970:                          f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		NTPositionLimit971:                        f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		UnitOfMeasure996:                          f0.Fld{Opt, f0.ASCII, f0.String("MWh" /* MEGAWATT_HOURS */, "MMBtu" /* ONE_MILLION_BTU */, "Bbl" /* BARRELS */, "Gal" /* GALLONS */, "t" /* METRIC_TONS */, "tn" /* TONS */, "MMbbl" /* MILLION_BARRELS */, "lbs" /* POUNDS */, "oz_tr" /* TROY_OUNCES */, "USD" /* US_DOLLARS */, "Bcf" /* BILLION_CUBIC_FEET */, "Bu" /* BUSHELS */, "Alw" /* ALLOWANCES */), f0.Var{1, 65536}},
		TimeUnit997:                               f0.Fld{Opt, f0.ASCII, f0.String("S" /* SECOND */, "Min" /* MINUTE */, "H" /* HOUR */, "D" /* DAY */, "Wk" /* WEEK */, "Mo" /* MONTH */, "Yr" /* YEAR */), f0.Var{1, 65536}},
		MaturityTime1079:                          f0.Fld{Opt, f0.ASCII, f0.TZTime(), f0.Var{8, 12}},
		SecurityGroup1151:                         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		MinPriceIncrementAmount1146:               f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		UnitOfMeasureQty1147:                      f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		ProductComplex1227:                        f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		PriceUnitOfMeasure1191:                    f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		PriceUnitOfMeasureQty1192:                 f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		SettlMethod1193:                           f0.Fld{Opt, f0.ASCII, f0.String("C" /* CASH_SETTLEMENT_REQUIRED */, "P" /* PHYSICAL_SETTLEMENT_REQUIRED */), f0.Con{1}},
		ExerciseStyle1194:                         f0.Fld{Opt, f0.ASCII, f0.IntDefault(0 /* EUROPEAN */, 1 /* AMERICAN */, 2 /* BERMUDA */), f0.Var{1, 19}},
		OptPayoutAmount1195:                       f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		PriceQuoteMethod1196:                      f0.Fld{Opt, f0.ASCII, f0.String("STD" /* STANDARD */, "INX" /* INDEX */, "INT" /* INTEREST_RATE_INDEX */, "PCTPAR" /* PERCENT_OF_PAR */), f0.Var{1, 65536}},
		ListMethod1198:                            f0.Fld{Opt, f0.ASCII, f0.IntDefault(0 /* PRE_LISTED_ONLY */, 1 /* USER_REQUESTED */), f0.Var{1, 19}},
		CapPrice1199:                              f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		FloorPrice1200:                            f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		PutOrCall201:                              f0.Fld{Opt, f0.ASCII, f0.IntDefault(0 /* PUT */, 1 /* CALL */), f0.Var{1, 19}},
		FlexibleIndicator1244:                     f0.Fld{Opt, f0.ASCII, f0.BoolDefault(), f0.Con{1}},
		FlexProductEligibilityIndicator1242:       f0.Fld{Opt, f0.ASCII, f0.BoolDefault(), f0.Con{1}},
		ValuationMethod1197:                       f0.Fld{Opt, f0.ASCII, f0.String("EQTY" /* PREMIUM_STYLE */, "FUT" /* FUTURES_STYLE_MARK_TO_MARKET */, "FUTDA" /* FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT */, "CDS" /* CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON */, "CDSD" /* CDS_IN_DELIVERY */), f0.Var{1, 65536}},
		ContractMultiplierUnit1435:                f0.Fld{Opt, f0.ASCII, f0.IntDefault(0 /* SHARES */, 1 /* HOURS */, 2 /* DAYS */), f0.Var{1, 19}},
		FlowScheduleType1439:                      f0.Fld{Opt, f0.ASCII, f0.IntDefault(0 /* NERC_EASTERN_OFF_PEAK */, 1 /* NERC_WESTERN_OFF_PEAK */, 2 /* NERC_CALENDAR_ALL_DAYS_IN_MONTH */, 3 /* NERC_EASTERN_PEAK */, 4 /* NERC_WESTERN_PEAK */), f0.Var{1, 19}},
		RestructuringType1449:                     f0.Fld{Opt, f0.ASCII, f0.String("FR" /* FULL_RESTRUCTURING */, "MR" /* MODIFIED_RESTRUCTURING */, "MM" /* MODIFIED_MOD_RESTRUCTURING */, "XR" /* NO_RESTRUCTURING_SPECIFIED */), f0.Var{1, 65536}},
		Seniority1450:                             f0.Fld{Opt, f0.ASCII, f0.String("SD" /* SENIOR_SECURED */, "SR" /* SENIOR */, "SB" /* SUBORDINATED */), f0.Var{1, 65536}},
		NotionalPercentageOutstanding1451:         f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		OriginalNotionalPercentageOutstanding1452: f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		AttachmentPoint1457:                       f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		DetachmentPoint1458:                       f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		StrikePriceDeterminationMethod1478:        f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* FIXED_STRIKE */, 2 /* STRIKE_SET_AT_EXPIRATION_TO_UNDERLYING_OR_OTHER_VALUE */, 3 /* STRIKE_SET_TO_AVERAGE_OF_UNDERLYING_SETTLEMENT_PRICE_ACROSS_THE_LIFE_OF_THE_OPTION */, 4 /* STRIKE_SET_TO_OPTIMAL_VALUE */), f0.Var{1, 19}},
		StrikePriceBoundaryMethod1479:             f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* LESS_THAN_UNDERLYING_PRICE_IS_IN_THE_MONEY */, 2 /* LESS_THAN_OR_EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY */, 3 /* EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY */, 4 /* GREATER_THAN_OR_EQUAL_TO_UNDERLYING_PRICE_IS_IN_THE_MONEY */, 5 /* GREATER_THAN_UNDERLYING_IS_IN_THE_MONEY */), f0.Var{1, 19}},
		StrikePriceBoundaryPrecision1480:          f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		UnderlyingPriceDeterminationMethod1481:    f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* REGULAR */, 2 /* SPECIAL_REFERENCE */, 3 /* OPTIMAL_VALUE */, 4 /* AVERAGE_VALUE */), f0.Var{1, 19}},
		OptPayoutType1482:                         f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* VANILLA */, 2 /* CAPPED */, 3 /* BINARY */), f0.Var{1, 19}},
		SecurityAltID455:                          f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		SecurityAltIDSource456:                    f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EventType865:                              f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* PUT */, 2 /* CALL */, 3 /* TENDER */, 4 /* SINKING_FUND_CALL */, 99 /* OTHER */, 5 /* ACTIVATION */, 6 /* INACTIVIATION */, 7 /* LAST_ELIGIBLE_TRADE_DATE */, 8 /* SWAP_START_DATE */, 9 /* SWAP_END_DATE */, 11 /* SWAP_NEXT_START_DATE */, 10 /* SWAP_ROLL_DATE */, 12 /* SWAP_NEXT_ROLL_DATE */, 13 /* FIRST_DELIVERY_DATE */, 14 /* LAST_DELIVERY_DATE */, 15 /* INITIAL_INVENTORY_DUE_DATE */, 16 /* FINAL_INVENTORY_DUE_DATE */, 17 /* FIRST_INTENT_DATE */, 18 /* LAST_INTENT_DATE */, 19 /* POSITION_REMOVAL_DATE */), f0.Var{1, 19}},
		EventDate866:                              f0.Fld{Opt, f0.ASCII, f0.LocalMktDateTime(), f0.Con{8}},
		EventPx867:                                f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		EventText868:                              f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		EventTime1145:                             f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		InstrumentPartyID1019:                     f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrumentPartyIDSource1050:               f0.Fld{Opt, f0.ASCII, f0.String(), f0.Con{1}},
		InstrumentPartyRole1051:                   f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		InstrumentPartySubID1053:                  f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		InstrumentPartySubIDType1054:              f0.Fld{Opt, f0.ASCII, f0.IntDefault(), f0.Var{1, 19}},
		SecurityXMLLen1184:                        f0.Fld{Opt, f0.ASCII, f0.Length(), f0.Var{1, 19}},
		SecurityXML1185:                           f0.Fld{Opt, f0.ASCII, f0.Bytes(), f0.Var{1, 65536}},
		SecurityXMLSchema1186:                     f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		ComplexEventType1484:                      f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* CAPPED */, 2 /* TRIGGER */, 3 /* KNOCK_IN_UP */, 4 /* KOCK_IN_DOWN */, 5 /* KNOCK_OUT_UP */, 6 /* KNOCK_OUT_DOWN */, 7 /* UNDERLYING */, 8 /* RESET_BARRIER */, 9 /* ROLLING_BARRIER */), f0.Var{1, 19}},
		ComplexOptPayoutAmount1485:                f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		ComplexEventPrice1486:                     f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		ComplexEventPriceBoundaryMethod1487:       f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* LESS_THAN_COMPLEXEVENTPRICE */, 2 /* LESS_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE */, 3 /* EQUAL_TO_COMPLEXEVENTPRICE */, 4 /* GREATER_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE */, 5 /* GREATER_THAN_COMPLEXEVENTPRICE */), f0.Var{1, 19}},
		ComplexEventPriceBoundaryPrecision1488:    f0.Fld{Opt, f0.ASCII, f0.Float(), f0.Var{1, 19}},
		ComplexEventPriceTimeType1489:             f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* EXPIRATION */, 2 /* IMMEDIATE */, 3 /* SPECIFIED_DATE_TIME */), f0.Var{1, 19}},
		ComplexEventCondition1490:                 f0.Fld{Opt, f0.ASCII, f0.IntDefault(1 /* AND */, 2 /* OR */), f0.Var{1, 19}},
		ComplexEventStartDate1492:                 f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		ComplexEventEndDate1493:                   f0.Fld{Opt, f0.ASCII, f0.UTCTimestampMillisecondTime(), f0.Var{1, 27}},
		ComplexEventStartTime1495:                 f0.Fld{Opt, f0.ASCII, f0.UTCTimeOnlyMillisecondTime(), f0.Var{8, 12}},
		ComplexEventEndTime1496:                   f0.Fld{Opt, f0.ASCII, f0.UTCTimeOnlyMillisecondTime(), f0.Var{8, 12}},
		ApplID1180:                                f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 65536}},
		ApplSeqNum1181:                            f0.Fld{Opt, f0.ASCII, f0.SeqNum(), f0.Var{1, 19}},
		ApplLastSeqNum1350:                        f0.Fld{Opt, f0.ASCII, f0.SeqNum(), f0.Var{1, 19}},
		ApplResendFlag1352:                        f0.Fld{Opt, f0.ASCII, f0.BoolDefault(), f0.Con{1}},
	},
	Unknown0: f0.UnknownFld{f0.ASCII, f0.Unknown(), f0.Var{1, 65536}},
	Sort: []int{
		TradSesReqID335,                           // STRING
		TradingSessionID336,                       // STRING
		TradingSessionSubID625,                    // STRING
		TradSesMethod338,                          // INT
		TradSesMode339,                            // INT
		UnsolicitedIndicator325,                   // BOOLEAN
		TradSesStatus340,                          // INT
		TradSesStatusRejReason567,                 // INT
		TradSesStartTime341,                       // UTCTIMESTAMP
		TradSesOpenTime342,                        // UTCTIMESTAMP
		TradSesPreCloseTime343,                    // UTCTIMESTAMP
		TradSesCloseTime344,                       // UTCTIMESTAMP
		TradSesEndTime345,                         // UTCTIMESTAMP
		TotalVolumeTraded387,                      // QTY
		Text58,                                    // STRING
		EncodedTextLen354,                         // LENGTH
		EncodedText355,                            // DATA
		MarketID1301,                              // EXCHANGE
		MarketSegmentID1300,                       // STRING
		TradSesEvent1368,                          // INT
		Symbol55,                                  // STRING
		SymbolSfx65,                               // STRING
		SecurityID48,                              // STRING
		SecurityIDSource22,                        // STRING
		Product460,                                // INT
		CFICode461,                                // STRING
		SecurityType167,                           // STRING
		SecuritySubType762,                        // STRING
		MaturityMonthYear200,                      // MONTHYEAR
		MaturityDate541,                           // LOCALMKTDATE
		CouponPaymentDate224,                      // LOCALMKTDATE
		IssueDate225,                              // LOCALMKTDATE
		RepoCollateralSecurityType239,             // INT
		RepurchaseTerm226,                         // INT
		RepurchaseRate227,                         // PERCENTAGE
		Factor228,                                 // FLOAT
		CreditRating255,                           // STRING
		InstrRegistry543,                          // STRING
		CountryOfIssue470,                         // COUNTRY
		StateOrProvinceOfIssue471,                 // STRING
		LocaleOfIssue472,                          // STRING
		RedemptionDate240,                         // LOCALMKTDATE
		StrikePrice202,                            // PRICE
		StrikeCurrency947,                         // CURRENCY
		OptAttribute206,                           // CHAR
		ContractMultiplier231,                     // FLOAT
		CouponRate223,                             // PERCENTAGE
		SecurityExchange207,                       // EXCHANGE
		Issuer106,                                 // STRING
		EncodedIssuerLen348,                       // LENGTH
		EncodedIssuer349,                          // DATA
		SecurityDesc107,                           // STRING
		EncodedSecurityDescLen350,                 // LENGTH
		EncodedSecurityDesc351,                    // DATA
		Pool691,                                   // STRING
		ContractSettlMonth667,                     // MONTHYEAR
		CPProgram875,                              // INT
		CPRegType876,                              // STRING
		DatedDate873,                              // LOCALMKTDATE
		InterestAccrualDate874,                    // LOCALMKTDATE
		SecurityStatus965,                         // STRING
		SettleOnOpenFlag966,                       // STRING
		InstrmtAssignmentMethod1049,               // CHAR
		StrikeMultiplier967,                       // FLOAT
		StrikeValue968,                            // FLOAT
		MinPriceIncrement969,                      // FLOAT
		PositionLimit970,                          // INT
		NTPositionLimit971,                        // INT
		UnitOfMeasure996,                          // STRING
		TimeUnit997,                               // STRING
		MaturityTime1079,                          // TZTIMEONLY
		SecurityGroup1151,                         // STRING
		MinPriceIncrementAmount1146,               // AMT
		UnitOfMeasureQty1147,                      // QTY
		ProductComplex1227,                        // STRING
		PriceUnitOfMeasure1191,                    // STRING
		PriceUnitOfMeasureQty1192,                 // QTY
		SettlMethod1193,                           // CHAR
		ExerciseStyle1194,                         // INT
		OptPayoutAmount1195,                       // AMT
		PriceQuoteMethod1196,                      // STRING
		ListMethod1198,                            // INT
		CapPrice1199,                              // PRICE
		FloorPrice1200,                            // PRICE
		PutOrCall201,                              // INT
		FlexibleIndicator1244,                     // BOOLEAN
		FlexProductEligibilityIndicator1242,       // BOOLEAN
		ValuationMethod1197,                       // STRING
		ContractMultiplierUnit1435,                // INT
		FlowScheduleType1439,                      // INT
		RestructuringType1449,                     // STRING
		Seniority1450,                             // STRING
		NotionalPercentageOutstanding1451,         // PERCENTAGE
		OriginalNotionalPercentageOutstanding1452, // PERCENTAGE
		AttachmentPoint1457,                       // PERCENTAGE
		DetachmentPoint1458,                       // PERCENTAGE
		StrikePriceDeterminationMethod1478,        // INT
		StrikePriceBoundaryMethod1479,             // INT
		StrikePriceBoundaryPrecision1480,          // PERCENTAGE
		UnderlyingPriceDeterminationMethod1481,    // INT
		OptPayoutType1482,                         // INT
		SecurityAltID455,                          // STRING
		SecurityAltIDSource456,                    // STRING
		EventType865,                              // INT
		EventDate866,                              // LOCALMKTDATE
		EventPx867,                                // PRICE
		EventText868,                              // STRING
		EventTime1145,                             // UTCTIMESTAMP
		InstrumentPartyID1019,                     // STRING
		InstrumentPartyIDSource1050,               // CHAR
		InstrumentPartyRole1051,                   // INT
		InstrumentPartySubID1053,                  // STRING
		InstrumentPartySubIDType1054,              // INT
		SecurityXMLLen1184,                        // LENGTH
		SecurityXML1185,                           // XMLDATA
		SecurityXMLSchema1186,                     // STRING
		ComplexEventType1484,                      // INT
		ComplexOptPayoutAmount1485,                // AMT
		ComplexEventPrice1486,                     // PRICE
		ComplexEventPriceBoundaryMethod1487,       // INT
		ComplexEventPriceBoundaryPrecision1488,    // PERCENTAGE
		ComplexEventPriceTimeType1489,             // INT
		ComplexEventCondition1490,                 // INT
		ComplexEventStartDate1492,                 // UTCTIMESTAMP
		ComplexEventEndDate1493,                   // UTCTIMESTAMP
		ComplexEventStartTime1495,                 // UTCTIMEONLY
		ComplexEventEndTime1496,                   // UTCTIMEONLY
		ApplID1180,                                // STRING
		ApplSeqNum1181,                            // SEQNUM
		ApplLastSeqNum1350,                        // SEQNUM
		ApplResendFlag1352,                        // BOOLEAN
	},
}

const Req, Opt = true, false

const (
	TradSesReqID335                           = 335  // STRING
	TradingSessionID336                       = 336  // STRING
	TradingSessionSubID625                    = 625  // STRING
	TradSesMethod338                          = 338  // INT
	TradSesMode339                            = 339  // INT
	UnsolicitedIndicator325                   = 325  // BOOLEAN
	TradSesStatus340                          = 340  // INT
	TradSesStatusRejReason567                 = 567  // INT
	TradSesStartTime341                       = 341  // UTCTIMESTAMP
	TradSesOpenTime342                        = 342  // UTCTIMESTAMP
	TradSesPreCloseTime343                    = 343  // UTCTIMESTAMP
	TradSesCloseTime344                       = 344  // UTCTIMESTAMP
	TradSesEndTime345                         = 345  // UTCTIMESTAMP
	TotalVolumeTraded387                      = 387  // QTY
	Text58                                    = 58   // STRING
	EncodedTextLen354                         = 354  // LENGTH
	EncodedText355                            = 355  // DATA
	MarketID1301                              = 1301 // EXCHANGE
	MarketSegmentID1300                       = 1300 // STRING
	TradSesEvent1368                          = 1368 // INT
	Symbol55                                  = 55   // STRING
	SymbolSfx65                               = 65   // STRING
	SecurityID48                              = 48   // STRING
	SecurityIDSource22                        = 22   // STRING
	Product460                                = 460  // INT
	CFICode461                                = 461  // STRING
	SecurityType167                           = 167  // STRING
	SecuritySubType762                        = 762  // STRING
	MaturityMonthYear200                      = 200  // MONTHYEAR
	MaturityDate541                           = 541  // LOCALMKTDATE
	CouponPaymentDate224                      = 224  // LOCALMKTDATE
	IssueDate225                              = 225  // LOCALMKTDATE
	RepoCollateralSecurityType239             = 239  // INT
	RepurchaseTerm226                         = 226  // INT
	RepurchaseRate227                         = 227  // PERCENTAGE
	Factor228                                 = 228  // FLOAT
	CreditRating255                           = 255  // STRING
	InstrRegistry543                          = 543  // STRING
	CountryOfIssue470                         = 470  // COUNTRY
	StateOrProvinceOfIssue471                 = 471  // STRING
	LocaleOfIssue472                          = 472  // STRING
	RedemptionDate240                         = 240  // LOCALMKTDATE
	StrikePrice202                            = 202  // PRICE
	StrikeCurrency947                         = 947  // CURRENCY
	OptAttribute206                           = 206  // CHAR
	ContractMultiplier231                     = 231  // FLOAT
	CouponRate223                             = 223  // PERCENTAGE
	SecurityExchange207                       = 207  // EXCHANGE
	Issuer106                                 = 106  // STRING
	EncodedIssuerLen348                       = 348  // LENGTH
	EncodedIssuer349                          = 349  // DATA
	SecurityDesc107                           = 107  // STRING
	EncodedSecurityDescLen350                 = 350  // LENGTH
	EncodedSecurityDesc351                    = 351  // DATA
	Pool691                                   = 691  // STRING
	ContractSettlMonth667                     = 667  // MONTHYEAR
	CPProgram875                              = 875  // INT
	CPRegType876                              = 876  // STRING
	DatedDate873                              = 873  // LOCALMKTDATE
	InterestAccrualDate874                    = 874  // LOCALMKTDATE
	SecurityStatus965                         = 965  // STRING
	SettleOnOpenFlag966                       = 966  // STRING
	InstrmtAssignmentMethod1049               = 1049 // CHAR
	StrikeMultiplier967                       = 967  // FLOAT
	StrikeValue968                            = 968  // FLOAT
	MinPriceIncrement969                      = 969  // FLOAT
	PositionLimit970                          = 970  // INT
	NTPositionLimit971                        = 971  // INT
	UnitOfMeasure996                          = 996  // STRING
	TimeUnit997                               = 997  // STRING
	MaturityTime1079                          = 1079 // TZTIMEONLY
	SecurityGroup1151                         = 1151 // STRING
	MinPriceIncrementAmount1146               = 1146 // AMT
	UnitOfMeasureQty1147                      = 1147 // QTY
	ProductComplex1227                        = 1227 // STRING
	PriceUnitOfMeasure1191                    = 1191 // STRING
	PriceUnitOfMeasureQty1192                 = 1192 // QTY
	SettlMethod1193                           = 1193 // CHAR
	ExerciseStyle1194                         = 1194 // INT
	OptPayoutAmount1195                       = 1195 // AMT
	PriceQuoteMethod1196                      = 1196 // STRING
	ListMethod1198                            = 1198 // INT
	CapPrice1199                              = 1199 // PRICE
	FloorPrice1200                            = 1200 // PRICE
	PutOrCall201                              = 201  // INT
	FlexibleIndicator1244                     = 1244 // BOOLEAN
	FlexProductEligibilityIndicator1242       = 1242 // BOOLEAN
	ValuationMethod1197                       = 1197 // STRING
	ContractMultiplierUnit1435                = 1435 // INT
	FlowScheduleType1439                      = 1439 // INT
	RestructuringType1449                     = 1449 // STRING
	Seniority1450                             = 1450 // STRING
	NotionalPercentageOutstanding1451         = 1451 // PERCENTAGE
	OriginalNotionalPercentageOutstanding1452 = 1452 // PERCENTAGE
	AttachmentPoint1457                       = 1457 // PERCENTAGE
	DetachmentPoint1458                       = 1458 // PERCENTAGE
	StrikePriceDeterminationMethod1478        = 1478 // INT
	StrikePriceBoundaryMethod1479             = 1479 // INT
	StrikePriceBoundaryPrecision1480          = 1480 // PERCENTAGE
	UnderlyingPriceDeterminationMethod1481    = 1481 // INT
	OptPayoutType1482                         = 1482 // INT
	SecurityAltID455                          = 455  // STRING
	SecurityAltIDSource456                    = 456  // STRING
	EventType865                              = 865  // INT
	EventDate866                              = 866  // LOCALMKTDATE
	EventPx867                                = 867  // PRICE
	EventText868                              = 868  // STRING
	EventTime1145                             = 1145 // UTCTIMESTAMP
	InstrumentPartyID1019                     = 1019 // STRING
	InstrumentPartyIDSource1050               = 1050 // CHAR
	InstrumentPartyRole1051                   = 1051 // INT
	InstrumentPartySubID1053                  = 1053 // STRING
	InstrumentPartySubIDType1054              = 1054 // INT
	SecurityXMLLen1184                        = 1184 // LENGTH
	SecurityXML1185                           = 1185 // XMLDATA
	SecurityXMLSchema1186                     = 1186 // STRING
	ComplexEventType1484                      = 1484 // INT
	ComplexOptPayoutAmount1485                = 1485 // AMT
	ComplexEventPrice1486                     = 1486 // PRICE
	ComplexEventPriceBoundaryMethod1487       = 1487 // INT
	ComplexEventPriceBoundaryPrecision1488    = 1488 // PERCENTAGE
	ComplexEventPriceTimeType1489             = 1489 // INT
	ComplexEventCondition1490                 = 1490 // INT
	ComplexEventStartDate1492                 = 1492 // UTCTIMESTAMP
	ComplexEventEndDate1493                   = 1493 // UTCTIMESTAMP
	ComplexEventStartTime1495                 = 1495 // UTCTIMEONLY
	ComplexEventEndTime1496                   = 1496 // UTCTIMEONLY
	ApplID1180                                = 1180 // STRING
	ApplSeqNum1181                            = 1181 // SEQNUM
	ApplLastSeqNum1350                        = 1350 // SEQNUM
	ApplResendFlag1352                        = 1352 // BOOLEAN
)
