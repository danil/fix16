// Code generated by protofix; DO NOT EDIT.
// Copyright 2021 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package moex44 provides MOEX.4.4 (FIX.4.4) protocol format.
package moex44

import (
	"time"

	f0 "github.com/danil/protofix/codecfix"
	"github.com/danil/protofix/marshfix"
)

var (
	MOEX44LogonMarshaler   = marshfix.Marshal{Tag: "MOEX44", Format: MOEX44Logon}
	MOEX44LogonUnmarshaler = marshfix.Unmarshal{Tag: "MOEX44", Format: MOEX44Logon}
)

// MOEX44Logon is a MOEX.4.4 (FIX.4.4) format of the Logon message which maps the codecs into individual fields.
var MOEX44Logon = f0.Format{
	Fields: map[int]f0.Codec{
		BeginString8:           f0.Fld{Req, f0.ASCII, f0.StringDefault("FIX.4.4"), f0.Con{7}},
		MsgType35:              f0.Fld{Req, f0.ASCII, f0.StringDefault(f0.LogonA), f0.Var{1, 2}},
		SenderCompID49:         f0.Fld{Req, f0.ASCII, f0.String(), f0.Var{1, 12}},
		TargetCompID56:         f0.Fld{Req, f0.ASCII, f0.String(), f0.Var{1, f0.MaxString}},
		MsgSeqNum34:            f0.Fld{Req, f0.ASCII, f0.SeqNum(), f0.Var{1, f0.MaxInt}},
		PossDupFlag43:          f0.Fld{Opt, f0.ASCII, f0.BoolDefault(), f0.Con{1}},
		PossResend97:           f0.Fld{Opt, f0.ASCII, f0.BoolDefault(), f0.Con{1}},
		SendingTime52:          f0.Fld{Req, f0.ASCII, f0.UTCTimestampNanosecondTime(), f0.Con{27}},
		OrigSendingTime122:     f0.Fld{Opt, f0.ASCII, f0.UTCTimestampNanosecondTime(), f0.Con{27}},
		EncryptMethod98:        f0.Fld{Req, f0.ASCII, f0.IntDefault(0), f0.Con{1}},
		HeartBtInt108:          f0.Fld{Req, f0.ASCII, f0.SecondsDuration(HeartBtIntCstr...), f0.Var{1, f0.MaxInt}},
		ResetSeqNumFlag141:     f0.Fld{Opt, f0.ASCII, f0.BoolDefault(), f0.Con{1}},
		Password554:            f0.Fld{Req, f0.ASCII, f0.String(), f0.Var{1, 8}},
		NewPassword925:         f0.Fld{Opt, f0.ASCII, f0.String(), f0.Var{1, 8}},
		SessionStatus1409:      f0.Fld{Opt, f0.ASCII, f0.IntDefault(0, 3), f0.Con{1}},
		CancelOnDisconnect6867: f0.Fld{Opt, f0.ASCII, f0.String("A"), f0.Con{1}},
		LanguageID6936:         f0.Fld{Opt, f0.ASCII, f0.String("R", "E"), f0.Con{1}},
	},
	BodyLength9: f0.BodyLengthFld{f0.ASCII, f0.BodyLength(), f0.Var{1, f0.MaxInt}},
	CheckSum10:  f0.ChecksumStringFld{f0.ASCII, f0.ChecksumString(), f0.Con{3}},
	Unknown:     f0.UnknownFld{f0.ASCII, f0.Unknown(), f0.Var{1, f0.MaxBytes}},
	Sort: []int{
		BeginString8,
		BodyLength9,
		MsgType35,
		SenderCompID49,
		TargetCompID56,
		MsgSeqNum34,
		PossDupFlag43,
		PossResend97,
		SendingTime52,
		OrigSendingTime122,
		EncryptMethod98,
		HeartBtInt108,
		ResetSeqNumFlag141,
		Password554,
		NewPassword925,
		SessionStatus1409,
		CancelOnDisconnect6867,
		LanguageID6936,
		CheckSum10,
	},
}

const Req, Opt = true, false

const (
	BeginString8           = 8
	BodyLength9            = 9
	CheckSum10             = 10
	MsgSeqNum34            = 34
	MsgType35              = 35
	PossDupFlag43          = 43
	SenderCompID49         = 49
	SendingTime52          = 52
	TargetCompID56         = 56
	PossResend97           = 97
	EncryptMethod98        = 98
	HeartBtInt108          = 108
	OrigSendingTime122     = 122
	ResetSeqNumFlag141     = 141
	Password554            = 554
	NewPassword925         = 925
	SessionStatus1409      = 1409
	CancelOnDisconnect6867 = 6867
	LanguageID6936         = 6936
)

var HeartBtIntCstr = func() []time.Duration {
	d := make([]time.Duration, 60)
	for i := 0; i < 60; i++ {
		d[i] = time.Duration(i+1) * time.Second
	}
	return d
}()
